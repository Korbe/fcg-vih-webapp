{"version":3,"file":"TwoFactorAuthenticationForm-CwFQSICu.js","sources":["../../../resources/js/Jetstream/ConfirmsPassword.vue","../../../resources/js/Pages/Profile/Partials/TwoFactorAuthenticationForm.vue"],"sourcesContent":["<script setup>\nimport { ref, reactive, nextTick } from 'vue';\nimport DialogModal from './DialogModal.vue';\nimport InputError from './InputError.vue';\nimport PrimaryButton from './PrimaryButton.vue';\nimport SecondaryButton from './SecondaryButton.vue';\nimport TextInput from './TextInput.vue';\n\nconst emit = defineEmits(['confirmed']);\n\ndefineProps({\n    title: {\n        type: String,\n        default: 'Confirm Password',\n    },\n    content: {\n        type: String,\n        default: 'For your security, please confirm your password to continue.',\n    },\n    button: {\n        type: String,\n        default: 'Confirm',\n    },\n});\n\nconst confirmingPassword = ref(false);\n\nconst form = reactive({\n    password: '',\n    error: '',\n    processing: false,\n});\n\nconst passwordInput = ref(null);\n\nconst startConfirmingPassword = () => {\n    axios.get(route('password.confirmation')).then(response => {\n        if (response.data.confirmed) {\n            emit('confirmed');\n        } else {\n            confirmingPassword.value = true;\n\n            setTimeout(() => passwordInput.value.focus(), 250);\n        }\n    });\n};\n\nconst confirmPassword = () => {\n    form.processing = true;\n\n    axios.post(route('password.confirm'), {\n        password: form.password,\n    }).then(() => {\n        form.processing = false;\n\n        closeModal();\n        nextTick().then(() => emit('confirmed'));\n\n    }).catch(error => {\n        form.processing = false;\n        form.error = error.response.data.errors.password[0];\n        passwordInput.value.focus();\n    });\n};\n\nconst closeModal = () => {\n    confirmingPassword.value = false;\n    form.password = '';\n    form.error = '';\n};\n</script>\n\n<template>\n    <span>\n        <span @click=\"startConfirmingPassword\">\n            <slot />\n        </span>\n\n        <DialogModal :show=\"confirmingPassword\" @close=\"closeModal\">\n            <template #title>\n                {{ title }}\n            </template>\n\n            <template #content>\n                {{ content }}\n\n                <div class=\"mt-4\">\n                    <TextInput\n                        ref=\"passwordInput\"\n                        v-model=\"form.password\"\n                        type=\"password\"\n                        class=\"mt-1 block w-3/4\"\n                        placeholder=\"Password\"\n                        autocomplete=\"current-password\"\n                        @keyup.enter=\"confirmPassword\"\n                    />\n\n                    <InputError :message=\"form.error\" class=\"mt-2\" />\n                </div>\n            </template>\n\n            <template #footer>\n                <SecondaryButton @click=\"closeModal\">\n                    Cancel\n                </SecondaryButton>\n\n                <PrimaryButton\n                    class=\"ms-3\"\n                    :class=\"{ 'opacity-25': form.processing }\"\n                    :disabled=\"form.processing\"\n                    @click=\"confirmPassword\"\n                >\n                    {{ button }}\n                </PrimaryButton>\n            </template>\n        </DialogModal>\n    </span>\n</template>\n","<script setup>\nimport { ref, computed, watch } from 'vue';\nimport { router, useForm, usePage } from '@inertiajs/vue3';\nimport ActionSection from '@/Jetstream/ActionSection.vue';\nimport ConfirmsPassword from '@/Jetstream/ConfirmsPassword.vue';\nimport DangerButton from '@/Jetstream/DangerButton.vue';\nimport InputError from '@/Jetstream/InputError.vue';\nimport InputLabel from '@/Jetstream/InputLabel.vue';\nimport PrimaryButton from '@/Jetstream/PrimaryButton.vue';\nimport SecondaryButton from '@/Jetstream/SecondaryButton.vue';\nimport TextInput from '@/Jetstream/TextInput.vue';\n\nconst props = defineProps({\n    requiresConfirmation: Boolean,\n});\n\nconst page = usePage();\nconst enabling = ref(false);\nconst confirming = ref(false);\nconst disabling = ref(false);\nconst qrCode = ref(null);\nconst setupKey = ref(null);\nconst recoveryCodes = ref([]);\n\nconst confirmationForm = useForm({\n    code: '',\n});\n\nconst twoFactorEnabled = computed(\n    () => ! enabling.value && page.props.auth.user?.two_factor_enabled,\n);\n\nwatch(twoFactorEnabled, () => {\n    if (! twoFactorEnabled.value) {\n        confirmationForm.reset();\n        confirmationForm.clearErrors();\n    }\n});\n\nconst enableTwoFactorAuthentication = () => {\n    enabling.value = true;\n\n    router.post(route('two-factor.enable'), {}, {\n        preserveScroll: true,\n        onSuccess: () => Promise.all([\n            showQrCode(),\n            showSetupKey(),\n            showRecoveryCodes(),\n        ]),\n        onFinish: () => {\n            enabling.value = false;\n            confirming.value = props.requiresConfirmation;\n        },\n    });\n};\n\nconst showQrCode = () => {\n    return axios.get(route('two-factor.qr-code')).then(response => {\n        qrCode.value = response.data.svg;\n    });\n};\n\nconst showSetupKey = () => {\n    return axios.get(route('two-factor.secret-key')).then(response => {\n        setupKey.value = response.data.secretKey;\n    });\n}\n\nconst showRecoveryCodes = () => {\n    return axios.get(route('two-factor.recovery-codes')).then(response => {\n        recoveryCodes.value = response.data;\n    });\n};\n\nconst confirmTwoFactorAuthentication = () => {\n    confirmationForm.post(route('two-factor.confirm'), {\n        errorBag: \"confirmTwoFactorAuthentication\",\n        preserveScroll: true,\n        preserveState: true,\n        onSuccess: () => {\n            confirming.value = false;\n            qrCode.value = null;\n            setupKey.value = null;\n        },\n    });\n};\n\nconst regenerateRecoveryCodes = () => {\n    axios\n        .post(route('two-factor.recovery-codes'))\n        .then(() => showRecoveryCodes());\n};\n\nconst disableTwoFactorAuthentication = () => {\n    disabling.value = true;\n\n    router.delete(route('two-factor.disable'), {\n        preserveScroll: true,\n        onSuccess: () => {\n            disabling.value = false;\n            confirming.value = false;\n        },\n    });\n};\n</script>\n\n<template>\n    <ActionSection>\n        <template #title>\n            Two Factor Authentication\n        </template>\n\n        <template #description>\n            Add additional security to your account using two factor authentication.\n        </template>\n\n        <template #content>\n            <h3 v-if=\"twoFactorEnabled && ! confirming\" class=\"text-lg font-medium text-gray-900\">\n                You have enabled two factor authentication.\n            </h3>\n\n            <h3 v-else-if=\"twoFactorEnabled && confirming\" class=\"text-lg font-medium text-gray-900\">\n                Finish enabling two factor authentication.\n            </h3>\n\n            <h3 v-else class=\"text-lg font-medium text-gray-900\">\n                You have not enabled two factor authentication.\n            </h3>\n\n            <div class=\"mt-3 max-w-xl text-sm text-gray-600\">\n                <p>\n                    When two factor authentication is enabled, you will be prompted for a secure, random token during authentication. You may retrieve this token from your phone's Google Authenticator application.\n                </p>\n            </div>\n\n            <div v-if=\"twoFactorEnabled\">\n                <div v-if=\"qrCode\">\n                    <div class=\"mt-4 max-w-xl text-sm text-gray-600\">\n                        <p v-if=\"confirming\" class=\"font-semibold\">\n                            To finish enabling two factor authentication, scan the following QR code using your phone's authenticator application or enter the setup key and provide the generated OTP code.\n                        </p>\n\n                        <p v-else>\n                            Two factor authentication is now enabled. Scan the following QR code using your phone's authenticator application or enter the setup key.\n                        </p>\n                    </div>\n\n                    <div class=\"mt-4 p-2 inline-block bg-white\" v-html=\"qrCode\" />\n\n                    <div v-if=\"setupKey\" class=\"mt-4 max-w-xl text-sm text-gray-600\">\n                        <p class=\"font-semibold\">\n                            Setup Key: <span v-html=\"setupKey\"></span>\n                        </p>\n                    </div>\n\n                    <div v-if=\"confirming\" class=\"mt-4\">\n                        <InputLabel for=\"code\" value=\"Code\" />\n\n                        <TextInput\n                            id=\"code\"\n                            v-model=\"confirmationForm.code\"\n                            type=\"text\"\n                            name=\"code\"\n                            class=\"block mt-1 w-1/2\"\n                            inputmode=\"numeric\"\n                            autofocus\n                            autocomplete=\"one-time-code\"\n                            @keyup.enter=\"confirmTwoFactorAuthentication\"\n                        />\n\n                        <InputError :message=\"confirmationForm.errors.code\" class=\"mt-2\" />\n                    </div>\n                </div>\n\n                <div v-if=\"recoveryCodes.length > 0 && ! confirming\">\n                    <div class=\"mt-4 max-w-xl text-sm text-gray-600\">\n                        <p class=\"font-semibold\">\n                            Store these recovery codes in a secure password manager. They can be used to recover access to your account if your two factor authentication device is lost.\n                        </p>\n                    </div>\n\n                    <div class=\"grid gap-1 max-w-xl mt-4 px-4 py-4 font-mono text-sm bg-gray-100 rounded-lg\">\n                        <div v-for=\"code in recoveryCodes\" :key=\"code\">\n                            {{ code }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"mt-5\">\n                <div v-if=\"! twoFactorEnabled\">\n                    <ConfirmsPassword @confirmed=\"enableTwoFactorAuthentication\">\n                        <PrimaryButton type=\"button\" :class=\"{ 'opacity-25': enabling }\" :disabled=\"enabling\">\n                            Enable\n                        </PrimaryButton>\n                    </ConfirmsPassword>\n                </div>\n\n                <div v-else>\n                    <ConfirmsPassword @confirmed=\"confirmTwoFactorAuthentication\">\n                        <PrimaryButton\n                            v-if=\"confirming\"\n                            type=\"button\"\n                            class=\"me-3\"\n                            :class=\"{ 'opacity-25': enabling }\"\n                            :disabled=\"enabling\"\n                        >\n                            Confirm\n                        </PrimaryButton>\n                    </ConfirmsPassword>\n\n                    <ConfirmsPassword @confirmed=\"regenerateRecoveryCodes\">\n                        <SecondaryButton\n                            v-if=\"recoveryCodes.length > 0 && ! confirming\"\n                            class=\"me-3\"\n                        >\n                            Regenerate Recovery Codes\n                        </SecondaryButton>\n                    </ConfirmsPassword>\n\n                    <ConfirmsPassword @confirmed=\"showRecoveryCodes\">\n                        <SecondaryButton\n                            v-if=\"recoveryCodes.length === 0 && ! confirming\"\n                            class=\"me-3\"\n                        >\n                            Show Recovery Codes\n                        </SecondaryButton>\n                    </ConfirmsPassword>\n\n                    <ConfirmsPassword @confirmed=\"disableTwoFactorAuthentication\">\n                        <SecondaryButton\n                            v-if=\"confirming\"\n                            :class=\"{ 'opacity-25': disabling }\"\n                            :disabled=\"disabling\"\n                        >\n                            Cancel\n                        </SecondaryButton>\n                    </ConfirmsPassword>\n\n                    <ConfirmsPassword @confirmed=\"disableTwoFactorAuthentication\">\n                        <DangerButton\n                            v-if=\"! confirming\"\n                            :class=\"{ 'opacity-25': disabling }\"\n                            :disabled=\"disabling\"\n                        >\n                            Disable\n                        </DangerButton>\n                    </ConfirmsPassword>\n                </div>\n            </div>\n        </template>\n    </ActionSection>\n</template>\n"],"names":["emit","__emit","confirmingPassword","ref","form","reactive","passwordInput","startConfirmingPassword","response","confirmPassword","closeModal","nextTick","error","props","__props","page","usePage","enabling","confirming","disabling","qrCode","setupKey","recoveryCodes","confirmationForm","useForm","twoFactorEnabled","computed","_a","watch","enableTwoFactorAuthentication","router","showQrCode","showSetupKey","showRecoveryCodes","confirmTwoFactorAuthentication","regenerateRecoveryCodes","disableTwoFactorAuthentication"],"mappings":"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"}